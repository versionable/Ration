<?php

namespace Versionable\Ration\Connection\Stream;

require_once dirname(__FILE__) . '/../../../../../../src/Versionable/Ration/Connection/Stream/UnixSocket.php';

/**
 * Test class for UnixSocket.
 * Generated by PHPUnit on 2012-08-03 at 16:57:53.
 */
class UnixSocketTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var UnixSocket
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new UnixSocket;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers Versionable\Ration\Connection\Stream\UnixSocket::getPath
     */
    public function testGetPath()
    {
        $this->assertNull($this->object->getPath());
    }

    /**
     * @depends testGetPath
     * @covers Versionable\Ration\Connection\Stream\UnixSocket::setPath
     * @covers Versionable\Ration\Connection\Stream\UnixSocket::getPath
     */
    public function testSetPath()
    {
        $path = 'test';
        
        $this->object->setPath($path);
        $this->assertEquals($path, $this->object->getPath());
    }

    /**
     * @covers Versionable\Ration\Connection\Stream\UnixSocket::isValid
     * @covers Versionable\Ration\Connection\Stream\UnixSocket::setPath
     * @covers Versionable\Ration\Connection\Stream\UnixSocket::getPath
     * @covers Versionable\Ration\Connection\Stream\UnixSocket::getAddress
     */
    public function testGetAddress()
    {
        $path = sys_get_temp_dir();
        
        $this->object->setPath($path);
        $this->assertEquals('file://'.$path, $this->object->getAddress());
    }

    /**
     * @depends testSetPath
     * @depends testGetPath
     * @covers Versionable\Ration\Connection\Stream\UnixSocket::isValid
     * @covers Versionable\Ration\Connection\Stream\UnixSocket::setPath
     * @covers Versionable\Ration\Connection\Stream\UnixSocket::getPath
     */
    public function testIsValid()
    {
        $this->object->setPath(sys_get_temp_dir());
        
        $this->assertTrue($this->object->isValid());
    }
    
    /**
     * @covers Versionable\Ration\Connection\Stream\UnixSocket::isValid
     * @expectedException Versionable\Ration\Connection\Exception\InvalidStreamException
     */
    public function testIsValidException()
    {
        $this->setExpectedException('Versionable\Ration\Connection\Exception\InvalidStreamException');
        
        $this->object->isValid();
    }
}
