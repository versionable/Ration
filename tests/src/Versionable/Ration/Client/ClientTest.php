<?php

namespace Versionable\Ration\Client;

use Versionable\Ration\Client\Client;

/**
 * Test class for Client.
 * Generated by PHPUnit on 2012-07-23 at 16:54:09.
 */
class ClientTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Client
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Client;
    }
    
    /**
     * @covers Versionable\Ration\Client\Client::getConnection
     */
    public function testGetConnection()
    {
        $this->assertNull($this->object->getConnection());
    }

    /**
     * @depends testGetConnection
     * @covers Versionable\Ration\Client\Client::setConnection
     * @covers Versionable\Ration\Client\Client::getConnection
     */
    public function testSetConnection()
    {
        $connection = $this->getMock('Versionable\Ration\Connection\ConnectionInterface');
        
        $this->object->setConnection($connection);
        $this->assertEquals($connection, $this->object->getConnection());
    }

    /**
     * @depends testSetConnection
     * @covers Versionable\Ration\Client\Client::setConnection
     * @covers Versionable\Ration\Client\Client::getConnection
     * @covers Versionable\Ration\Client\Client::send
     */
    public function testSend()
    {
        $request = $this->getMock('Versionable\Ration\Request\Request');
        $response = $this->getMock('Versionable\Ration\Response\Response');
        
        $connection = $this->getMock('Versionable\Ration\Connection\ConnectionInterface', array(
            'call',
            'connect',
            'disconnect',
            'readLength',
            'read',
            'write',
            'parseResponse'
        ));
        
        $connection->expects($this->any())
                   ->method('call')
                   ->will($this->returnValue($response));
        
        $this->object->setConnection($connection);
        $this->assertEquals($response, $this->object->send($request));
    }

}
