<?php

namespace Versionable\Ration\Request;

use Versionable\Ration\Request\Request;

/**
 * Test class for Request.
 * Generated by PHPUnit on 2012-07-23 at 16:54:09.
 */
class RequestTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Request
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Request;
    }

    /**
     * @covers Versionable\Ration\Request\Request::getCommand
     */
    public function testGetCommand()
    {
        $this->assertNull($this->object->getCommand());
    }

    /**
     * @depends testGetCommand
     * @covers Versionable\Ration\Request\Request::setCommand
     * @covers Versionable\Ration\Request\Request::getCommand
     */
    public function testSetCommand()
    {
        $command = $this->getMock('CommandInterface');
        
        $this->object->setCommand($command);
        $this->assertEquals($command, $this->object->getCommand());
    }
    
    public function testCRLF()
    {
        $this->assertEquals(chr(13).chr(10), RATION_CRLF);
    }

    /**
     * @covers Versionable\Ration\Request\Request::buildRequest
     * @todo Implement testBuildRequest().
     */
    public function testBuildRequest()
    {
        $crlf = chr(13).chr(10);
        $request = '*1'.$crlf.'$4'.$crlf.'TEST'.$crlf;
        
        $command = $this->getMock('CommandInterface', array('getParameters', 'getCommand'));
        $command->expects($this->once())
                ->method('getParameters')
                ->will($this->returnValue(array()));
        $command->expects($this->once())
                ->method('getCommand')
                ->will($this->returnValue('test'));
        
        $this->object->setCommand($command);
        
        $this->assertEquals($request, $this->object->buildRequest());
    }

}